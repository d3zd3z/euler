// Problem 12
//
// 08 March 2002
//
// The sequence of triangle numbers is generated by adding the natural
// numbers. So the 7^th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 =
// 28. The first ten terms would be:
//
// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
//
// Let us list the factors of the first seven triangle numbers:
//
//      1: 1
//      3: 1,3
//      6: 1,2,3,6
//     10: 1,2,5,10
//     15: 1,3,5,15
//     21: 1,3,7,21
//     28: 1,2,4,7,14,28
//
// We can see that 28 is the first triangle number to have over five
// divisors.
//
// What is the value of the first triangle number to have over five hundred
// divisors?
//
// 75675600

#include <iostream>

#include "sieve.hpp"

namespace euler {
namespace pr012 {

int divisor_count(Tsieve& sieve, int n) {
  int result = 1;
  int prime = 2;

  while (n > 1) {
    int divide_count = 0;
    while (n % prime == 0) {
      n /= prime;
      ++divide_count;
    }

    result *= divide_count + 1;

    if (n > 1) {
      prime = sieve.next_prime(prime);
    }
  }

  return result;
}

void solve()
{
  Tsieve sieve;

  int n = 1;
  int tri = 1;
  for (;;) {
    if (divisor_count(sieve, tri) > 500)
      break;
    ++n;
    tri += n;
  }

  std::cout << tri << "\n";
}

}
}
