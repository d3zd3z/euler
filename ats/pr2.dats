(*
 * Problem 2
 *
 * 19 October 2001
 *
 *
 * Each new term in the Fibonacci sequence is generated by
 * adding the previous two terms. By starting with 1 and 2, the
 * first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose
 * values do not exceed four million, find the sum of the
 * even-valued terms.
 *)

// fun next_fib (a: int, b: int): (int, int) = (b, a + b)
fun next_fib {a,b: nat}
  (a: int a, b: int b): [r,s:nat] (int r, int s) =
  (b, a + b)

implement
main (): void = let
  #define LIMIT 4000000
  fun loop {a:nat} {b:nat}
    (a: int a, b: int b, sum: int): int =
    if b <= LIMIT then
      let val (a2, b2) = next_fib (a, b)
      in loop (a2, b2, if b mod 2 = 0 then sum+b else sum) end
    else sum
  val answer = loop (1, 2, 0)
in
  printf ("result = %d\n", @(answer))
end
