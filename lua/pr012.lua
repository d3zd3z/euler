-- Problem 12
--
-- 08 March 2002
--
--
-- The sequence of triangle numbers is generated by adding the natural
-- numbers. So the 7^th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 =
-- 28. The first ten terms would be:
--
-- 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
--
-- Let us list the factors of the first seven triangle numbers:
--
--      1: 1
--      3: 1,3
--      6: 1,2,3,6
--     10: 1,2,5,10
--     15: 1,3,5,15
--     21: 1,3,7,21
--     28: 1,2,4,7,14,28
--
-- We can see that 28 is the first triangle number to have over five
-- divisors.
--
-- What is the value of the first triangle number to have over five hundred
-- divisors?
--
-- 76576500

local sieve = require('sieve')

function divisor_count(sv, n)
  local result = 1
  local prime = 2

  while n > 1 do
    local divide_count = 0
    while n % prime == 0 do
      n = n / prime
      divide_count = divide_count + 1
    end

    result = result * (divide_count + 1)

    if n > 1 then
      prime = sv:next_prime(prime)
    end
  end
  return result
end

function solve ()
  local sv = sieve.Sieve()

  local n = 1
  local tri = 1
  while true do
    if divisor_count(sv, tri) > 500 then
      break
    end
    n = n + 1
    tri = tri + n
  end
  return tri
end

print(solve())
