(*
 * Problem 45
 *
 * 06 June 2003
 *
 *
 * Triangle, pentagonal, and hexagonal numbers are generated by the
 * following formulae:
 *
 * Triangle     T[n]=n(n+1)/2    1, 3, 6, 10, 15, ...
 * Pentagonal   P[n]=n(3n−1)/2   1, 5, 12, 22, 35, ...
 * Hexagonal    H[n]=n(2n−1)     1, 6, 15, 28, 45, ...
 *
 * It can be verified that T[285] = P[165] = H[143] = 40755.
 *
 * Find the next triangle number that is also pentagonal and hexagonal.
 *
 * 1533776805
 *)

(* All hexagonal numbers are triangle numbers, so there is no need to check for
 * triangle numbers.
 *
 * To get the nth pentagonal P(n-1) + (3n-2)
 * To get the nth hexagonal  H(n-1) + (4n-3)
 *)

structure Pr045 =
struct

  (* The answer overflows the 31-bit signed integers used in SMLNJ, so use
   * IntInf, even though it is slower. *)

  (* This is fairly simple, just track the two numbers, incrementing whichever
   * one is smaller until they are equal (and greater than the number in the
   * problem statement. *)
  fun solve () : IntInf.int =
    let
      fun loop (pn, hn, pentagonal, hexagonal) =
        if pentagonal = hexagonal andalso pentagonal > 40755 then
          pentagonal
        else if pentagonal < hexagonal then
          loop (pn+1, hn, pentagonal + 3*(pn+1)-2, hexagonal)
        else
          loop (pn, hn+1, pentagonal, hexagonal + 4*(hn+1) -3)
    in
      loop (1, 1, 1, 1)
    end

end
