#lang racket

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Problem 2
;; 
;; 19 October 2001
;; 
;; Each new term in the Fibonacci sequence is generated by adding the
;; previous two terms. By starting with 1 and 2, the first 10 terms
;; will be:
;; 
;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;; 
;; By considering the terms in the Fibonacci sequence whose values do
;; not exceed four million, find the sum of the even-valued terms.
;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(provide euler-2)

(define (euler-2)
  (let loop [(a 1) (b 2) (sum 0)]
    (cond [(< a 4000000)
	   (loop b (+ a b) (if (even? a) (+ a sum) sum))]
	  [else sum])))

(module* main #f
  (euler-2))
