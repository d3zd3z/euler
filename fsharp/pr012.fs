// Problem 12
//
// 08 March 2002
//
//
// The sequence of triangle numbers is generated by adding the natural
// numbers. So the 7^th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 =
// 28. The first ten terms would be:
//
// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
//
// Let us list the factors of the first seven triangle numbers:
//
//      1: 1
//      3: 1,3
//      6: 1,2,3,6
//     10: 1,2,5,10
//     15: 1,3,5,15
//     21: 1,3,7,21
//     28: 1,2,4,7,14,28
//
// We can see that 28 is the first triangle number to have over five
// divisors.
//
// What is the value of the first triangle number to have over five hundred
// divisors?
//
// 76576500

// Simple recursive search version.
let pr12 () =
  let sv = Sieve.Sieve ()
  let rec loop n tri =
    if sv.DivisorCount tri > 500 then tri
    else
      loop (n + 1) (tri + n + 1)
  loop 1 1

// Defined as a recursive sequence.
let pr12b () =
  let sv = Sieve.Sieve ()
  let rec triFrom n tri =
    seq {
      yield tri
      yield! (triFrom (n + 1) (tri + n + 1))
    }
  triFrom 1 1
  |> Seq.skipWhile (fun x -> sv.DivisorCount x <= 500)
  |> Seq.head

printfn "%A" (pr12b ())
