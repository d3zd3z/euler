#! /usr/bin/env python3

import glob
import re

# Generate the src/run/problems.go file based on the available
# problems.

base = 'github.com/d3zd3z/euler/go'

package_re = re.compile(r'^package ([a-zA-Z0-9]+)$')

def main():
    names = glob.glob('src/*/pr[0-9][0-9][0-9].go')

    names.sort()
    packages = []
    for name in names:
        pkg = name[-8:-3]
        good = False
        with open(name, 'r') as fd:
            for line in fd:
                m = package_re.match(line)
                if m:
                    p = m.group(1)
                    if p == pkg:
                        packages.append(pkg)
                    else:
                        print("Warning: expected package {} but got {}".format(pkg, p))

    packages.sort()
    with open('src/run/problems.go', 'w') as out:
        print('// Autogenerated: do not edit.', file=out)
        print('', file=out)
        print('package main', file=out)
        print('', file=out)
        print('import (', file=out)

        for p in packages:
            print('\t"{}/{}"'.format(base, p), file=out)
        print(')', file=out)
        print('', file=out)

        print('var problems = []Problem{', file=out)
        for p in packages:
            print('\t{{{}, {}.Run}},'.format(int(p[2:]), p), file=out)
        print('}', file=out)

    print("Updated for {} packages".format(len(packages)))

if __name__ == '__main__':
    main()
